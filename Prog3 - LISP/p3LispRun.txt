;;; -=
(setf x 5 y 10)
(-= x 1)
x
(-= y x)
y

;;; select A.
(setf good 0)
(setf bad 0)
(defvar grade)
(defun gradeStuff (grade)
    (select grade
        (when (A B)
           (setf good (+ 1 good))
           (print "doing well")
        )
        (when (C)
           (print "average"))
        (when (D F)
           (setf bad (+ bad 1))
           (print "oh no")
        )
        (default
           (print (list "unknown value=" grade)))
    )
)
(gradeStuff 'A)
(gradeStuff 'B)
(gradeStuff 'C)
(gradeStuff 'D)
(gradeStuff 'F)
(gradestuff 'U)
(print (list "good=" good "bad=" bad))

;;; select B.

(setf x 5 y 10)
(select (- y x)
    (when (2 4 6 8)
        (print "it is even")
        (* y 2)
    )
    (when (1 3 5 7)
        (print "it is odd")
        (+ (* y 2) 1)
    )
    (default
        (print "default")
        y
    )
)
; (setf x 4 y 6)
; (select (- y x)
;     (when (2 4 6 8)
;         (print "it is even")
;         (* y 2)
;     )
;     (when (1 3 5 7)
;         (print "it is odd")
;         (+ (* y 2) 1)
;     )
;     (default
;         (print "default")
;         y
;     )
; )
; (setf x 5 y 20)
; (select (- y x)
;     (when (2 4 6 8)
;         (print "it is even")
;         (* y 2)
;     )
;     (when (1 3 5 7)
;         (print "it is odd")
;         (+ (* y 2) 1)
;     )
;     (default
;         (print "default")
;         y
;     )
; )